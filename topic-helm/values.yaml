## 'appName' is the desired name of service to be deployed in pod
#appName: kafka-topic
#
## 'imageRegistry' is the url of registry from which images needs to be pulled e.g. ECR, docker.io, etc
#imageRegistry: "ionatestregistry.azurecr.io/"
#
## 'imageName' is the name of image to be pulled from 'imageRegistry'
#imageName: "ubuntu"
#
## 'imageTag' that needs to be pulled and deployed in the current deployment e.g. latest
#imageTag: "3.0"
#
#config:
#  kafkaSh: |
#    #!/bin/bash
#    # kafka_2.13-3.4.0
#    # export KAFKA_OPTS="-Djava.security.auth.login.config=/tmp/kafka_jass.conf"
#    #/tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic alerttopic --partitions 3 --replication-factor 1
#    #/tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic alertprocessedtopic  --partitions 3 --replication-factor 1
#    #/tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic glpitopic  --partitions 3 --replication-factor 1
#    #/tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic resetalerttopic  --partitions 3 --replication-factor 1
#    #/tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic resetalerttopicop  --partitions 3 --replication-factor 1
#    /tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic rundecktopic  --partitions 3 --replication-factor 1
#    /tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic rundecktopicop  --partitions 3 --replication-factor 1
#    /tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic scripttopic  --partitions 3 --replication-factor 1
#    /tmp/kafka_2.13-3.4.0/bin/kafka-topics.sh --create --bootstrap-server=cp-kafka.core-ns.svc.cluster.local:9092 --topic snowtopic  --partitions 3 --replication-factor 1
#kubernetesClusterDomain: cluster.local
